name: Workflow for building and running some simple hardware tests
on: [push]
env:
  LAGER_GATEWAY: 45
concurrency: 
  group: dut
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Build Project
        uses: docker://lagerdata/devenv-cortexm-minimal:version-1.1
        with:
          entrypoint: lager
          args: exec build

      - name: Upload the app hexfile
        uses: actions/upload-artifact@v2
        with:
          name: app_hexfile
          path: _build/app/app.hex

      - name: Upload the unit example hexfile
        uses: actions/upload-artifact@v2
        with:
          name: test_example_hexfile
          path: _build/unit-tests/test-suites/test-example/test-example.hex

      - name: Upload the unit ledctrl hexfile
        uses: actions/upload-artifact@v2
        with:
          name: test_ledctrl_hexfile
          path: _build/unit-tests/test-suites/test-ledctrl/test-ledctrl.hex

      - name: Upload system test
        uses: actions/upload-artifact@v2
        with:
          name: test_system
          path: system-tests/test.py

  connect:
    runs-on: ubuntu-latest
    steps:
      - name: Connect to gateway
        uses: docker://lagerdata/lager-cli
        env:
          LAGER_TOKEN_ID: ${{ secrets.LAGER_TOKEN_ID }} 
          LAGER_TOKEN_SECRET: ${{ secrets.LAGER_TOKEN_SECRET }}     #This is setup inside GitHub see https://docs.lagerdata.com/ci/github_actions.html     
        with:
          entrypoint: lager
          args: connect --device atsame70 --force

  unit_tests:
    runs-on: ubuntu-latest
    needs: [build, connect]
    steps: 
      - name : Download the example unit test hexfile
        uses: actions/download-artifact@v2
        with:
          name: test_example_hexfile

      - name : Download the ledctrl unit test hexfile
        uses: actions/download-artifact@v2
        with:
          name: test_ledctrl_hexfile

      - name: Unit Test Example
        uses: docker://lagerdata/lager-cli
        env:
          LAGER_TOKEN_ID: ${{ secrets.LAGER_TOKEN_ID }} 
          LAGER_TOKEN_SECRET: ${{ secrets.LAGER_TOKEN_SECRET }}
        with:
          entrypoint: lager
          args: testrun --serial-device /dev/ttyACM0 --hexfile /github/workspace/test-example.hex

      - name: Unit Test LedCtrl
        uses: docker://lagerdata/lager-cli
        env:
          LAGER_TOKEN_ID: ${{ secrets.LAGER_TOKEN_ID }} 
          LAGER_TOKEN_SECRET: ${{ secrets.LAGER_TOKEN_SECRET }}
        with:
          entrypoint: lager
          args: testrun --serial-device /dev/ttyACM0 --hexfile /github/workspace/test-ledctrl.hex

  flash: #Only proceed to this step if the build and connect jobs succeeded 
    runs-on: ubuntu-latest
    needs: [unit_tests]
    steps:
      - name: Download the app hexfile
        uses: actions/download-artifact@v2
        with:
          name: app_hexfile

      - name: Flash App
        uses: docker://lagerdata/lager-cli
        env:
          LAGER_TOKEN_ID: ${{ secrets.LAGER_TOKEN_ID }} 
          LAGER_TOKEN_SECRET: ${{ secrets.LAGER_TOKEN_SECRET }}
        with:
          entrypoint: lager
          args: flash --hexfile /github/workspace/app.hex

  system_test: #test basic BLE functionality
    runs-on: ubuntu-latest
    needs: [flash]
    steps:
      - name: Download system test
        uses: actions/download-artifact@v2
        with:
          name: test_system

      - name: Test System
        uses: docker://lagerdata/lager-cli
        env:
          LAGER_TOKEN_ID: ${{ secrets.LAGER_TOKEN_ID }} 
          LAGER_TOKEN_SECRET: ${{ secrets.LAGER_TOKEN_SECRET }}
        with:
          entrypoint: lager
          args: python /github/workspace/test.py

